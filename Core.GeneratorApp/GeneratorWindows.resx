<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="工具栏.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolsConnection.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAADICAYAAADBXvybAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABSXSURBVHhe7Z0LtFxVecdT27rEVxvgZs4+c5NAvXfO3hOC
        LiJV2grxhXUJiFoVtC2u6AJpwUdtARMkbXkYxUc0+KjWAqJoISBapaWrXdjKasujtkU0XWKM1gdaaFcC
        mTvnkc70+/Z8gzf37pvcO3dmzj7n/H9r/dedOzPnnP295uzz2nsFAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADA0OmueMJRD0dPm9jfDCba655RTxrH11P93DAzLwyz5hkq0WeT3qRS81bSZtFb7Xv0GX+H
        v8vL8LK8Dl4Xr5PXLVsBAIyCcGbdapXpF1NRvkXF+mMqMXeGbX1PmEbfDNPp74WxeXiiZWbC1HRHKbsN
        2pbdJm+b2sBtsW3itlEbua3SbACACxU3tMrMmSrV71Rp9GlbzK2px1xF57W4zfwjQDZYW9gmsk3MBKD8
        qO6GJ1Pyb1AHmq+n7vIVYWJusXvHluk4i6ZMsjaSrWQz2259wL4gn4h7ACgmYUcfFWT6lWGiPxSk+t+d
        BQB1a2n0dToM+ECYRaev6a5f2fMeAJ6yqnNcjfZYr1Gx+Ugwo//DldTQItQ299Je/71hpk8LHp2aEPcC
        kA+Trem6SqLX0d7oGkrQf52XsNBQRD+c/0w/oNvo75l8JUDcD8BoUDPNNZRwr6U9zfbemW93YkIjVqy/
        Rnv8q4M4etVkZ7ou4QFgcGqJPi6IzRbSPzmTDspdHBva228O4mZTwgbA4ZnoNoMgjc6jbvlXXIkF+asg
        NV8KD5hNfCJUwgnALLobfjHIolfZ678zZq8riaACKTb/TX8/Wc/0yyTCoMrU2tFGvrRDx3y75yULVAqp
        1HyDr91TL+3ZEnZQBfrH3aqt73YlBlReBUn0dyrVF+B23ZKC427oILWm9odt/dn6gearm93mEyVNQFGp
        p+Y5FNhP4LgbWlh6Nx2+/Skdxh0jaQOKQjBjTqZjs+vdgYWg+VrVnv5fOpZ/Hy7TFYAwMy8K2tHnXYGE
        oMVoomViFeuP4uSdh/BllDCJvuAKHAQNKuoVXhek5mRJM5AXQaxfiRNs0KhFXfqbg9i8VNIOjAty/Nl8
        qcQVFAgalXinwvfYSxqCUUHd8zfwQw2uIEDQuMTDaAWJ+R1JSzAswsRswhNjkG+yN11RbkqagkEJU31S
        mOjbXE6GIG9kc1SfJGkLFsuavetX0i/lu8OW+T+nYyHIN3GuUs5y7koag0NBv47n9IYzdjgTgrwXD4Kp
        z5F0BnOppc1fJUftnO84aLGaaE0lE7F5hF7vUam53w6YkZg76PVO0rX0ekeYNK7qyezg9/gz/o4dwIGW
        4WV5Hbyu2euGlqydnNOS3uDIR6aezo8RqtZU6nAWxGqZR+3JyFjfQP9v4Wfn+ZhwMonW8z3aPNDCKB7O
        4HXyunkbvC3eZm/bZottix1/ntrmajPU5Zzm3OYcF5dWE5U0Xx+kBiOmPq7p7/HelYeIpv/Pr2fNF6zu
        RKG4y1u4jdxWbrNtO9tgZ3Vx2Vg9cY5zrou7qoMdvD/Vf+lySiXUmsr4WiztIbdSYZwVJs1nTXYmjxD3
        lAa2iW2zNpKttHf7e7bd6ZMKiHOec1/cU17sbCWZ+eOJlmm7HFFataYe693Jp7fyqDbijsrChwAq1hfT
        j92Xq9b159znGijtLDWqHb2EZ+VwGV86xeZhm8SxvgyFfXi48Oupfjvt7W6mvf9PnT4tmewMNVQT4oJy
        QAG82GVsWbQq1T+g49JbVGwuClJ9ipgNBmRW4d+0KiHfOnxeFnFtiNnFJeysWx2k5nMuA4uvxvf5uWWM
        NDp62Mfsa/a5OxbFlq0RqhUxt1iEcXQGGbFrrlGFFnUraY/9F/wE09ru2ieJqWBMsM/Z9xyDEnbxd3HN
        iKnFgI9NHYYUUy2zj/7eyJdHKNF+WUwEOcOx4JhwbCRG7vgVTVQ7YqK/TLabU9TYW+c1vmCSu8JuVYl5
        Iyb28x+OEceKY1aSO/pu5VoS8/yinjV/ixr43TkNLpRUom8PU/37GBG0uNg7BSmGvVi641wQfZdrSszy
        AzpeutLR0MKIT4aoTJ8q5oCSEGTN37SX7BwxL4yotsSc/KglZl1hx2yzj8BGf076NTEHlJR6Fm2kvTw/
        J+DOBc/FNca1JuaMF3XA3qf+I1fDvNaM2Ue/ktvryfQzxRRQEeqpfi7lwCfpR74zLy88F9ca15yYMh7o
        +OdyV2N8lkrMj6l7fsXq9rpniBmgovTuvzc7JlpmxpUrPoty+HIxY7Tw3tDVAF8VpNPfVrF+56rOcTUx
        AQCL6jY0Fc7VPEuLK3e8VaI/LCaMBnujgmvDHsreS5xGF078tPlUaT4ATmrtxrG8p+RenyuXfJRKzXXS
        /OFhnzorytlLfqAkNhdJ0wFYNDydMu0teSwAd275piT6Qu2h458izV8e3OXtDSTg2JBnoh7Hp8I4iqTp
        AAwEP3Fonz505Jhv4mf8j96vlTR9MOqxmbZjVzs24JVic1eYNYt1nzDwnvCA2RSm+lvOnPNL9w28g6Nf
        ihNWpeY/HSv1R+imgxGzprt+ZZjpK32/tTZIGg8G6boTpdmLg7suYdL4iWuFvgjddDBOeBplkt9TcvMT
        fZl5oTT50IRZdLrXQz2hmw5yJEzMa8O2udeZmx7Izu+e6VdIc93wxHGuhb0QuunAE3gYbMrFzV5ff0+i
        N0hzD0al+gLnAl5I34Bu+sLYy5/dxtHBjFkbxOsMxXKDSs3zVBa9hOeQpx/w36b3ziW9jd7f3BO/1ufy
        Z3aeefquXYaW5XXwunidpR3EcAgE8bTx+R56iudbpKk9aG95qeuLPkjF+hJpZuUJOs1mPWm+mpJrKxXk
        TWHaeMDls9Go8UBvm3ort4HbIs2qPJyjbp95oUulmb0EGm/SHF5BMv3tMNOnSRMrRb4FvVThB4DhXLU5
        6/RRXmo8MC8eXhU73/HTaRwrTSs1q1tRyNMcqcy8z86V5vJHERXrr4WJ2UZ/T6vKcwacs5y7Tn+MXY4i
        7+NDsY/t6Zyc4Ms0Km1eSAVwg/f3KQxTM7Tnj/XHqfg3lf0RYc5hpw/GpkMUeZ+8it0+235AnyXNKA0U
        9FP5HEiQ6i+qZPohl+1VVC0xP6S/PBb+ZvaRuKs0cC7nM17DIoq8z9iLPTF/y7N1yuYLj8w8elktjf7N
        aS80Tz1f6ctKlweU2y57R6MlFHmfsRV7Yj64orviCbLZwrJm7/qV3C1Vifkrp53QomV9SL5kn4p7iwvl
        Nue4y87haoAi7zPSYp8x+1Si3ySbKizU7XyxnUUE3fLhi3zKvmUfi7sLC+e6HcbMZeeytYwi7zOKYpdu
        2kmyicJhRyaJo80+3wpZOpGv2efsewlD4eCcH/7h3BCKvM9Qiz02Xy3quOk8Yqx9mMZlFzQ29WJQzNF7
        Offp0OROl11L1xCLvM9wil3ftrb7zMJNa0R7kxdR+2+cbw+Us27k2EiYCgPXALV9mTMajaDI+yyn2FVs
        rl/RXfFzsqpCEGbR6bTn8OQGCGhhUYwoVjZoRYFqgXomA47BOMIi7zNQsSf6Q7J4IQj5UcSCDJ8FzRLH
        jGInYSwE1I3/gNOWBTWGIu+zlGJXmfkTWcx7+NG+MI7+0WUHVCBxDBd6TNNDFj/78BiLvM+iij3WfyBf
        9xqV6LOpvffNaz9UdN3HsZUwew0/Uupo/yzlUOR9Fiz2lj5AXahN8jVvsc9e+z48ELRscYw51hJ2bwkP
        6HNs7cyzIcci7zO32Cdi8wgPZCAfe8mRnamn0y/95TzszsEOhcoqO8QSxZxjL2ngJXSoeybX0M/a7kGR
        9+kXO/1qfqeeNV8gb3tJPdG/q2bMN2YnAVQdcew5ByQdvKSeRc/nWvKqyPtwg+gX8wT51ztkJs1b5gYe
        qqxu4ZyQ9PAOriXvitxnwn36qJAHQLDzoTsDDlVVnBOcG5Qjki6giHAXjQK6a16AIehg7fK9Ow8cTHYm
        jyjUZHmQH6Kc4dyRNAI+w0MWh5m5yxlICDqcKHc4hySdgI+oVL8Nl8yg5cpeiqNckrQCvlDvTE2Gbf0Z
        V9CqJJ4IUK7B7qG90v12VNnE3EGvd5Kupdc7wqRxVU9mB7/Hn/F3+Lu8DC/L6/B9UsGxiHKKc0vSDOSJ
        is2ZFJRKnXBblfDosfq2MIveQ0W6SaWNX1ePNo7ueWR48Dp53byNkLdF2+xt292ukmoX51jPIyAX+E4n
        R2DKI54dMzW3UqJdxBNL+jQtFbeF28RtUwn1GBLz43ntL5E418R0MC5qiT6OiuB2V0AKrl083jv9Pb+W
        mHVibmEIO7ph7zyM9cfpMKB8dx9SznHuiblglASpObl3e6AjEAWTauu7+ZIOT3Q42W5OiYmlodaNjiH7
        zqKu/wetrQ4fFE2Ue7vrWbRRTASjgG/4VzNmrysARVGQNh6kbu77g1SfImZVBra5Z3vjQZdvCqOW2cfz
        zIlZYJjYE0IupxdAE+2p/7FnuGP9ihXdFT8vJlUX8gH7gn3CvnH5rCA6XywCw4Ac+odzHFwI0R7si7QH
        e2PQmZoQU8Ac2DfWR+Qrlw/9l36XmAKWA+3Jt7kd7Kf4+jMdYnzE5yf5fIV9xr4r3DX8TG8XE8AgDD5K
        Zg6amXosTPR2nJVdPnJVZbv1qcvXXkp/RpoPFstEt/lU6s592e1Qv2SPvxP93jDWDWk+GBLsU/ZtYY7j
        E/3XR3Wip0nzwaHgmSzCtr7H6UiflDR+Qkl4BV9CkqaDEcE+Zl+zz52x8Eltc2+t3ThWmg4Woj8sldOJ
        PqhleODLbas7UShNBmOCfW7P2XAMXLHxQh4O/+Qrvha7SvXN9dQ8R5oJcoJjwLFwxShfociXjE/FXkuj
        r6skep00DXgCx4Rj44rZ+IUiH5i8i93ehRfrd03+F0Yd8RWODcco3zsmUeTLJq9i57u2ap3iPVhSVThW
        HDNXLEcrFPnQGGex23vR+VZVUEg4duO7lx5FPnTGUex8ggeXRooPx3D0J+tQ5CNjxMW+RTYDSgLHdE6M
        hyQU+cgZfrFH36xn+mWyelAyOLYcY3fsBxGKfGwMsdg/O9marstqQUnhGHOs58R+AKHIx84Qiv2PZFWg
        InDM5+TAEoQiz41Bit0+hJKZl8sqQMVQsXn50h+SQZHnzlKKXSX6OzzmnCwKKopKzfOCZLGX4FDk3rCo
        Ym/reyaTaL0sUm66p/xC8OjURD0200G67kSV6VPDA+Y1QRqdp1J9MYtf83v8GX/HfpeW4WVlLaWGn3lX
        cfQvzlx5XChy7zhksSfmjnpnfalm3Jjc2zwySBsn2lFWU7PFDtKRRf8QJOZH8+xfouw6eF29gT+28DZ4
        W7xNu/GSMNmZrpNtCwwbjiL3FlexU1f9c7XO8U+RrxSWNd31K3nk0TA2f0Z75N2zbRynbJc30R/my1Yr
        u7/yS9K8wsK5waPDHGwnitx7Zhc7jz8mbxeSWjvaSEm4VSXmzoMT0SPRHpF+eC5RafM3pNmFhHx8Tc8m
        FHlh4EDxiCTyb6GwE1Qk+upVafHmOOM2c9uLesKTcwZFDkZGPWkcT13yS8symwnL2kI2sW1iJgDVY213
        7ZOoIN7MJwrnFknp1LPxzWyzmA9AuZnY3wxUrC+hxK/UVM+iXWw7+0DcAUC5UHFDh5l5d5hMP+QogGqJ
        fUC+YJ+IewAoNjyPOO3FPjbRMm1n0ldY7BP2jU/zvgOwZFRsLgpj87AryaFZIh+xr8RtABSDMGueQcl7
        lzOpoYXFPiPfiRsB8BPuggap/pQziaFFy/oQ3XngIyrV56KbPkRxd558Ku4FIH9UZt7vTFZo2WLfipsB
        yIfebJ/RV1wJCg1P1seYrRbkAR1DnkFJmNtTZBXUbva5uB+A0WMvm7mTERqxcBkOjAV+OsuVgND4hON2
        MFIoyT4xN+mgfKRSc52EBYDhMNmZPIKSa+fcZIPyVZCaL6nuhidLmAAYnKP3axVm5quuRIM8UGzuWt2J
        QgkXAEtn9rBUkM/C8E9gmaDYfReKHAwJFLuvQpGDIVO0Yp9oTSUqNffzME70dyfpWnq9I0waV/VkdvB7
        /Jl8535exrUuP4UiByPC12JflegfhKm+QaX6Ap55pdaOjpEmLxleltdh18U/DqnZM3d7+QtFDkaMF8Xe
        MvuoEG+qp/rtKtEnSNNGBk9fRD8kvxek0ed52842jU0ocjAmciv2xPwN/T1/TUcracrY4W1zG6Qt7naO
        TChyMGbGVuxJ4/s8W0uYNJ8lm/YGblOvbdxGR9uHKhQ5yInRFjuvN3rHZMf/iQ25jdzWUfoCRQ5yZfjF
        rr9VT5vnNbvNJ8omCgO3mdvONrhtG0QocuAJwyh2e2kr01fyrKmy2sLCNrAty79chyIHnrGcYuez2aRn
        y6pKA9tkz9Q7bD68UOTAUwYpdpU2L5TFSwvb6LJ9YaHIgecsttiDpPFgEJuXymKlh21lm12+OFgoclAQ
        Dlvsib59stOckq9XBraZbXf6xApFDgrGQsWu0ujT8pXKolJz/Vy/oMhBYZlb7CrWH5WPKo9KzDUoclAa
        Hi/2LHpP7x3QJ0zMNhQ5KA1I5IWBbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEatHW1UiT47jKN3sPg1
        vycfAwCKCo/Hzg+P1FLzw589QDJPe8JEb+fvymIAgKJAxXtl2Jra7yhst/i7tIwsDgDwHZ7FxVnMi5Bq
        67tlNQAAX3EV7yCS1QEAfIP3xq6iHUTcK5DVAgB8wR6TOwp2WcIxOwD+YGc7XcqJt8WK1omz8QB4Al8e
        cxbqEMSX52QzAIA8oYLcM7dAhyW+Bi+bAQDkBd/d5irQYQp30AGQM/a2VkdxDlO8DdkcACAP7L3rjuIc
        qmgbsjkAQB6g0AGoAOi6A1ABcDIOgIpAxYjLawCUHdwwA0AFwC2wAFQEPNQCQEXAY6oAVARX0Q4iWR0A
        wFcwlBQAFcEesy/lBB1/F8fkABQPPmOO4Z4BqBB8d5u9XZbvjSfxa9zxBgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACAfFix4v8BLEQa3tJqKQcAAAAASUVORK5CYII=
</value>
  </data>
</root>